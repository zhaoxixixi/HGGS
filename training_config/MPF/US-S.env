seed=53
gpu_idx=0

# param selected
ode_model_name="brusselator"
xs_param=[1.0, 3.0]
xs_lb_ub=[0, 5]
param_selected=[0, 1]
# auto calc
xs_weight=[[0,13.5],[0,0.2]]

# wandb log
wandb_swith = False

name="US-S"
save_dir="../../../../outputs/brusselator/"
log_dir="../../../../2param/brusselator/"
train_paths=["../../../../data/2param/brusselator/train/Baseline/US-S/US-S-5k.csv"]
test_paths=["../../../../data/2param/brusselator/val/val_5k.csv"]

batch_size=40960
last_epoch_n=3000
epoch_n=3000
base_lr=0.002
nn_layers=[128, 256, 128]
nn_norm=["BatchNorm1d","BatchNorm1d","BatchNorm1d"]

loss_func_type=["MSELoss"]
init_strategy='xiver'
# optimizer
weight_decay=0.0005
# warm up
warm_up_epoch=300
warm_up_lr_rate=0.00001
# warm_up_strategy='line'
# learning rate alpha
lr_alpha=0.2

# dataset
dataset_type=default
uniform_sampling_ratio=1.0
boundary_sampling_ratio=0.0
boundary_KNN=5

dropout=0.0
cls=False

# 3D regression
xs_selected=[0, 1]
ys_selected=[2, 3]
ys_default=["", "", "", "", "", ""]
ys_weight=[1,1,1,1,1,1]
ys_name=["a","b","c","d","e","f"]

# Online Sampling Strategy
iter_count=20
Algorithm_type=["Uniform", 4, 500, 250]

# Importance Sampling
finetune_epoch=3000
finetune_count=20
tau=-1.0

# training-strategy
train_strategy=US-S
fitness_strategy='S'

pretrained_model_path=None
total_training_samples=10000

Early_Stopping=True
Ada_Gradient_Settings=["None", 5]
Gaussian_Mixture=True

sampling_core=4